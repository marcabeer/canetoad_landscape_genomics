#read in output based on gene.gff3
genes_raw <- read.table("bedtools_closest_genes", header=FALSE, sep="\t")
#reorder by contig name
genes_contigs <- matrix(unlist(stringr::str_split(genes_raw$V1, "_")), ncol=4, byrow=TRUE)
genes_contigs[,1] <- sub('...', '', genes_contigs[,1])
genes_ordered <- genes_raw[order(as.numeric(genes_contigs[,1])),]
genes_ordered[genes_ordered == "."] <- NA
genes_ordered[genes_ordered == "-1"] <- NA
library(gsubfn)
#read in per-environmental factor significant SNPs for GWR
##these are SNP indices that lack locus information
gwr_sig <- readRDS("gwr_output_03032023")
View(gwr_sig)
gwr_par_df <- as.data.frame(do.call(rbind, gwr_sig))
gwr_par_df_sig <- gwr_par_df[which(gwr_par_df$bf>quantile(gwr_par_df$bf, 0.95)),]
gwr_sig_env <- as.data.frame(matrix(unlist(str_split(gwr_par_df_sig$formula, " ")), ncol=9, byrow=TRUE))
gwr_sig_env$snp <- gwr_par_df_sig$snp
gwr_sig_env <- gwr_sig_env[,c(10,9)]
#read in per-environmental factor significant SNPs for GWR
##these are SNP indices that lack locus information
gwr_sig <- readRDS("gwr_output_03032023")
gwr_par_df <- as.data.frame(do.call(rbind, gwr_sig))
gwr_par_df_sig <- gwr_par_df[which(gwr_par_df$bf>quantile(gwr_par_df$bf, 0.95)),]
gwr_sig_env <- as.data.frame(matrix(unlist(str_split(gwr_par_df_sig$formula, " ")), ncol=9, byrow=TRUE))
library(stringr)
gwr_sig_env <- as.data.frame(matrix(unlist(str_split(gwr_par_df_sig$formula, " ")), ncol=9, byrow=TRUE))
gwr_sig_env$snp <- gwr_par_df_sig$snp
gwr_sig_env <- gwr_sig_env[,c(10,9)]
gwr_sig_bio2 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio2")]
gwr_sig_bio4 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio4")]
gwr_sig_bio12 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio12")]
gwr_sig_elev <- gwr_sig_env$snp[which(gwr_sig_env$V9=="elev")]
#isolate locus names for GWR significant SNPs
gwr_sig_bio2_loci <- ct_loci[gwr_sig_bio2]
gwr_sig_bio4_loci <- ct_loci[gwr_sig_bio4]
gwr_sig_bio12_loci <- ct_loci[gwr_sig_bio12]
gwr_sig_elev_loci <- ct_loci[gwr_sig_elev]
#read in full locus list
##uses vcftools locus missingness output
ct_loci <- read.table("ct_lmiss.lmiss", header=TRUE)[,1:2]
ct_loci <- paste(ct_loci[,1], ct_loci[,2], sep="_")
#read in per-environmental factor significant SNPs for Bayenv2
##these are SNP indices that lack locus information
be_sig <- readRDS("be_gea_sig_kf_r95")
be_sig_bio2 <- be_sig$Bio2
be_sig_bio4 <- be_sig$Bio4
be_sig_bio12 <- be_sig$Bio12
be_sig_elev <- be_sig$Elev
#isolate locus names for Bayenv2 significant SNPs
be_sig_bio2_loci <- ct_loci[be_sig_bio2]
be_sig_bio4_loci <- ct_loci[be_sig_bio4]
be_sig_bio12_loci <- ct_loci[be_sig_bio12]
be_sig_elev_loci <- ct_loci[be_sig_elev]
#read in per-environmental factor significant SNPs for GWR
##these are SNP indices that lack locus information
gwr_sig <- readRDS("gwr_output_03032023")
gwr_par_df <- as.data.frame(do.call(rbind, gwr_sig))
gwr_par_df_sig <- gwr_par_df[which(gwr_par_df$bf>quantile(gwr_par_df$bf, 0.95)),]
gwr_sig_env <- as.data.frame(matrix(unlist(str_split(gwr_par_df_sig$formula, " ")), ncol=9, byrow=TRUE))
gwr_sig_env$snp <- gwr_par_df_sig$snp
gwr_sig_env <- gwr_sig_env[,c(10,9)]
gwr_sig_bio2 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio2")]
gwr_sig_bio4 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio4")]
gwr_sig_bio12 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio12")]
gwr_sig_elev <- gwr_sig_env$snp[which(gwr_sig_env$V9=="elev")]
#isolate locus names for GWR significant SNPs
gwr_sig_bio2_loci <- ct_loci[gwr_sig_bio2]
gwr_sig_bio4_loci <- ct_loci[gwr_sig_bio4]
gwr_sig_bio12_loci <- ct_loci[gwr_sig_bio12]
gwr_sig_elev_loci <- ct_loci[gwr_sig_elev]
###
#construct final table
genes_ordered$gwr <- NA
genes_ordered$bayenv <- NA
genes_ordered$gwr_bio2 <- NA
genes_ordered$bayenv_bio2 <- NA
genes_ordered$gwr_bio4 <- NA
genes_ordered$bayenv_bio4 <- NA
genes_ordered$gwr_bio12 <- NA
genes_ordered$bayenv_bio12 <- NA
genes_ordered$gwr_elev <- NA
genes_ordered$bayenv_elev <- NA
gene_loci <- paste(genes_ordered[,1], genes_ordered[,3], sep="_")
for (i in 1:nrow(genes_ordered)){
#GWR detection
genes_ordered$gwr_bio2[i] <- !is.na(match(gene_loci[i], gwr_sig_bio2_loci))
genes_ordered$gwr_bio4[i] <- !is.na(match(gene_loci[i], gwr_sig_bio4_loci))
genes_ordered$gwr_bio12[i] <- !is.na(match(gene_loci[i], gwr_sig_bio12_loci))
genes_ordered$gwr_elev[i] <- !is.na(match(gene_loci[i], gwr_sig_elev_loci))
#Bayenv2 detection
genes_ordered$bayenv_bio2[i] <- !is.na(match(gene_loci[i], be_sig_bio2_loci))
genes_ordered$bayenv_bio4[i] <- !is.na(match(gene_loci[i], be_sig_bio4_loci))
genes_ordered$bayenv_bio12[i] <- !is.na(match(gene_loci[i], be_sig_bio12_loci))
genes_ordered$bayenv_elev[i] <- !is.na(match(gene_loci[i], be_sig_elev_loci))
#detected at all by GWR or Bayenv2
gwr_any <- sum(c(genes_ordered$gwr_bio2[i], genes_ordered$gwr_bio4[i], genes_ordered$gwr_bio12[i], genes_ordered$gwr_elev[i]), na.rm=TRUE)
bayenv_any <- sum(c(genes_ordered$bayenv_bio2[i], genes_ordered$bayenv_bio4[i], genes_ordered$bayenv_bio12[i], genes_ordered$bayenv_elev[i]), na.rm=TRUE)
if (gwr_any > 0){
genes_ordered$gwr[i] <- TRUE
}else{
genes_ordered$gwr[i] <- FALSE
}
if (bayenv_any > 0){
genes_ordered$bayenv[i] <- TRUE
}else{
genes_ordered$bayenv[i] <- FALSE
}
}
#remove FALSE values to make table easier to read
genes_ordered[genes_ordered==FALSE] <- NA
#isolate candidate genes for only SNPs detected by both Bayenv and GWR
genes_ordered_intersect <- genes_ordered[which(genes_ordered$gwr==TRUE & genes_ordered$bayenv==TRUE),]
#read in full locus list
##uses vcftools locus missingness output
ct_loci <- read.table("ct_lmiss.lmiss", header=TRUE)[,1:2]
ct_loci <- paste(ct_loci[,1], ct_loci[,2], sep="_")
#read in per-environmental factor significant SNPs for Bayenv2
##these are SNP indices that lack locus information
be_sig <- readRDS("be_gea_sig_kf_r95")
be_sig_bio2 <- be_sig$Bio2
be_sig_bio4 <- be_sig$Bio4
be_sig_bio12 <- be_sig$Bio12
be_sig_elev <- be_sig$Elev
#isolate locus names for Bayenv2 significant SNPs
be_sig_bio2_loci <- ct_loci[be_sig_bio2]
be_sig_bio4_loci <- ct_loci[be_sig_bio4]
be_sig_bio12_loci <- ct_loci[be_sig_bio12]
be_sig_elev_loci <- ct_loci[be_sig_elev]
#read in per-environmental factor significant SNPs for GWR
##these are SNP indices that lack locus information
gwr_sig <- readRDS("gwr_output_03032023")
gwr_par_df <- as.data.frame(do.call(rbind, gwr_sig))
gwr_par_df_sig <- gwr_par_df[which(gwr_par_df$bf>quantile(gwr_par_df$bf, 0.95)),]
gwr_sig_env <- as.data.frame(matrix(unlist(str_split(gwr_par_df_sig$formula, " ")), ncol=9, byrow=TRUE))
gwr_sig_env$snp <- gwr_par_df_sig$snp
gwr_sig_env <- gwr_sig_env[,c(10,9)]
gwr_sig_bio2 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio2")]
gwr_sig_bio4 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio4")]
gwr_sig_bio12 <- gwr_sig_env$snp[which(gwr_sig_env$V9=="bio12")]
gwr_sig_elev <- gwr_sig_env$snp[which(gwr_sig_env$V9=="elev")]
#isolate locus names for GWR significant SNPs
gwr_sig_bio2_loci <- ct_loci[gwr_sig_bio2]
gwr_sig_bio4_loci <- ct_loci[gwr_sig_bio4]
gwr_sig_bio12_loci <- ct_loci[gwr_sig_bio12]
gwr_sig_elev_loci <- ct_loci[gwr_sig_elev]
###
#construct final table
genes_ordered$gwr <- NA
genes_ordered$bayenv <- NA
genes_ordered$gwr_bio2 <- NA
genes_ordered$bayenv_bio2 <- NA
genes_ordered$gwr_bio4 <- NA
genes_ordered$bayenv_bio4 <- NA
genes_ordered$gwr_bio12 <- NA
genes_ordered$bayenv_bio12 <- NA
genes_ordered$gwr_elev <- NA
genes_ordered$bayenv_elev <- NA
gene_loci <- paste(genes_ordered[,1], genes_ordered[,3], sep="_")
for (i in 1:nrow(genes_ordered)){
#GWR detection
genes_ordered$gwr_bio2[i] <- !is.na(match(gene_loci[i], gwr_sig_bio2_loci))
genes_ordered$gwr_bio4[i] <- !is.na(match(gene_loci[i], gwr_sig_bio4_loci))
genes_ordered$gwr_bio12[i] <- !is.na(match(gene_loci[i], gwr_sig_bio12_loci))
genes_ordered$gwr_elev[i] <- !is.na(match(gene_loci[i], gwr_sig_elev_loci))
#Bayenv2 detection
genes_ordered$bayenv_bio2[i] <- !is.na(match(gene_loci[i], be_sig_bio2_loci))
genes_ordered$bayenv_bio4[i] <- !is.na(match(gene_loci[i], be_sig_bio4_loci))
genes_ordered$bayenv_bio12[i] <- !is.na(match(gene_loci[i], be_sig_bio12_loci))
genes_ordered$bayenv_elev[i] <- !is.na(match(gene_loci[i], be_sig_elev_loci))
#detected at all by GWR or Bayenv2
gwr_any <- sum(c(genes_ordered$gwr_bio2[i], genes_ordered$gwr_bio4[i], genes_ordered$gwr_bio12[i], genes_ordered$gwr_elev[i]), na.rm=TRUE)
bayenv_any <- sum(c(genes_ordered$bayenv_bio2[i], genes_ordered$bayenv_bio4[i], genes_ordered$bayenv_bio12[i], genes_ordered$bayenv_elev[i]), na.rm=TRUE)
if (gwr_any > 0){
genes_ordered$gwr[i] <- TRUE
}else{
genes_ordered$gwr[i] <- FALSE
}
if (bayenv_any > 0){
genes_ordered$bayenv[i] <- TRUE
}else{
genes_ordered$bayenv[i] <- FALSE
}
}
#remove FALSE values to make table easier to read
genes_ordered[genes_ordered==FALSE] <- NA
#isolate candidate genes for only SNPs detected by both Bayenv and GWR
genes_ordered_intersect <- genes_ordered[which(genes_ordered$gwr==TRUE & genes_ordered$bayenv==TRUE),]
