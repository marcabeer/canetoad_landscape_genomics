library(stringr)
library(raster)
library(lubridate)
library(rangeBuilder)
##############################
#Process cane toad occurrence records from GBIF
##############################
#load and manipulate occurrence records
gbif_raw <- readLines("ct_gbif.csv")
#test<-str_replace_all(gbif_raw[[2]], pattern="\t\t", replacement="\tNA\t")
#replace successive \t with \tNA\t in order to insert missing NAs
##then split strings at \t
gbif_fillna <- list()
gbif_fillna2 <- list()
for (i in 1:length(gbif_raw)){
gbif_fillna[[i]] <- str_replace_all(gbif_raw[[i]], pattern="\t\t", replacement="\tNA\t")
gbif_fillna2[[i]] <- strsplit(gbif_fillna[[i]], split="\t")
}
#keep only first 40 fields (some observations are missing later fields)
gbif_fillna_trunc <- list()
for (i in 1:length(gbif_fillna)){
gbif_fillna_trunc[[i]] <- gbif_fillna2[[i]][[1]][c(1:40)]
}
#turn list into df
gbif <- t(as.data.frame(gbif_fillna_trunc))
colnames(gbif) <- c(gbif[1,])
rownames(gbif) <- 1:nrow(gbif)
gbif <- gbif[-1,]
gbif<-data.frame(gbif)
#turn occurrence observation dates in to decimal format
gbif_ymd <- ymd(paste(gbif$year, gbif$month, gbif$day, sep="-"))
gbif_yeardec <- decimal_date(gbif_ymd)
#isolate year and coordinates
gbif_all <- data.frame(long=as.numeric(gbif$decimalLongitude), lat=as.numeric(gbif$decimalLatitude), year=gbif_yeardec)
na_year_index <- which(is.na(gbif_all$year))
gbif_all$year[na_year_index] <- gbif$year[na_year_index]
#load in sampling metadata for genetic dataset
ct_sites<-read.table("ct_sites.csv", sep=",", header=TRUE)
ct_sites<-data.frame(long=ct_sites$long, lat=ct_sites$lat, year=2010)
#combine gbif observations and those from the genetic dataset
gbif_all <- data.frame(rbind(gbif_all, ct_sites))
gbif_all <- gbif_all[which(gbif_all$lat > -34.5),]
gbif_all <- gbif_all[which(gbif_all$long > 125),]
#remove unlikely occurrence locations (e.g., central Australia in the desert)
gbif_badlat<-gbif_all$lat < -22
gbif_badlong<-gbif_all$long < 140
gbif_badlat_badlong<-gbif_badlat+gbif_badlong
gbif_all<-gbif_all[-which(gbif_badlat_badlong == 2),]
#save filtered set of occurrence records
write.table(gbif_all, "gbif_filtered.csv", row.names=FALSE)
getwd()
occurrence <- read.table("occurrence_filtered.csv")
occurrence <- read.csv("occurrence_filtered.csv")
#load colonization year raster
gauss_20cell<-raster("saga_gauss_20cell_v7.tif")
#basic data manipulation and plotting
library(plyr)
library(ggplot2)
library(gghalves)
library(patchwork)
library(ggnewscale)
#geographic data plotting
library("rnaturalearth")
library("rnaturalearthhires")
library("rnaturalearthdata")
library(stringr)
library(raster)
library(rangeBuilder)
#load colonization year raster
colyear <- raster("saga_gauss_20cell_v7.tif")
#aggregate to lower resolution for plotting
gauss_20cell <- aggregate(gauss_20cell, fact=3)
#load colonization year raster
colyear <- raster("saga_gauss_20cell_v7.tif")
#aggregate to lower resolution for plotting
gauss_20cell <- aggregate(gauss_20cell, fact=3)
#load colonization year raster
colyear <- raster("saga_gauss_20cell_v7.tif")
#aggregate to lower resolution for plotting
colyear <- aggregate(colyear, fact=3)
#store as df
colyear_df <- as.data.frame(colyear, xy=TRUE)
colyear_df_nona <- colyear_df[-which(is.na(colyear_df$saga_colyear_v7)),]
spplot(colyear)
world <- ne_countries(scale = "large", returnclass = "sf")
ggplot()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=as.numeric(saga_colyear_v7)))+
scale_fill_gradient2(low="white", mid="yellow", high="red", midpoint=1900)
library(viridis)
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = gbif_all[-c(which(gbif_all$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = ct_sites, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#specify color palette
colorpal_alt2 <- viridis::mako(n=20, begin=0.3, end=0.9)
#load world geographic data
world <- ne_countries(scale = "large", returnclass = "sf")
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = gbif_all[-c(which(gbif_all$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = ct_sites, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#specify color breaks
colorbreaks <- seq(from=1930, to=2010, by=10)
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradient2(low="yellow", mid="yellow", high="orangered", midpoint=1900)+
labs(fill="Colonization year")+
ggnewscale::new_scale_fill()+
geom_point(data = gbif_all[-c(which(gbif_all$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = ct_sites, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=16), legend.text = element_text(size=14))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.85, 0.7))
#load sampling localities
localities <- read.csv("ct_sites.csv")
#specify color palette
colorpal_alt2 <- viridis::mako(n=20, begin=0.3, end=0.9)
#specify color breaks
colorbreaks <- seq(from=1930, to=2010, by=10)
#load world geographic data
world <- ne_countries(scale = "large", returnclass = "sf")
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradient2(low="yellow", mid="yellow", high="orangered", midpoint=1900)+
labs(fill="Colonization year")+
ggnewscale::new_scale_fill()+
geom_point(data = gbif_all[-c(which(gbif_all$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = ct_sites, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=16), legend.text = element_text(size=14))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.85, 0.7))
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = occurrence[-c(which(occurrence$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = ct_sites, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = occurrence[-c(which(occurrence$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#store as df
colyear_df <- as.data.frame(colyear, xy=TRUE)
colyear_df_nona <- colyear_df[-which(is.na(colyear_df$saga_colyear_v7)),]
#aggregate to lower resolution for plotting
colyear <- aggregate(colyear, fact=3)
#aggregate to lower resolution for plotting
colyear <- aggregate(colyear, fact=3)
#store as df
colyear_df <- as.data.frame(colyear, xy=TRUE)
colyear_df_nona <- colyear_df[-which(is.na(colyear_df$saga_colyear_v7)),]
View(colyear_df)
colnames(colyear_df) <- c("x", "y", "year")
#store as df
colyear_df <- as.data.frame(colyear, xy=TRUE)
colnames(colyear_df) <- c("x", "y", "year")
colyear_df_nona <- colyear_df[-which(is.na(colyear_df$year)),]
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=saga_colyear_v7))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = occurrence[-c(which(occurrence$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=year))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = occurrence[-c(which(occurrence$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#load colonization year raster
colyear <- raster("saga_gauss_20cell_v7.tif")
#aggregate to lower resolution for plotting
colyear <- aggregate(colyear, fact=3)
#store as df
colyear_df <- as.data.frame(colyear, xy=TRUE)
colnames(colyear_df) <- c("x", "y", "year")
colyear_df_nona <- colyear_df[-which(is.na(colyear_df$year)),]
ggplot(data = world) +
geom_sf(fill="gray75", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=colyear_df_nona, mapping=aes(x=x, y=y, fill=year))+
scale_fill_gradientn(colours=colorpal_alt2, breaks=colorbreaks)+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = occurrence[-c(which(occurrence$year > 2011)),], aes(x = long, y = lat), shape=19, colour="black", size=1, alpha=0.3)+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#generate isolines
##painfully hard-coded; I know, I know
isoline_df <- colyear_df_nona
isoline_df$saga_colyear_v7[which(isoline_df$saga_colyear_v7<1940)] <- 0
isoline_df$saga_colyear_v7[which(isoline_df$saga_colyear_v7>=1940 & isoline_df$saga_colyear_v7<1950)] <- 1
isoline_df$saga_colyear_v7[which(isoline_df$saga_colyear_v7>=1950 & isoline_df$saga_colyear_v7<1960)] <- 2
nfully hard-coded; I know, I know
isoline_df <- colyear_df_nona
isoline_df$year[which(isoline_df$year<1940)] <- 0
isoline_df$year[which(isoline_df$year>=1940 & isoline_df$year<1950)] <- 1
isoline_df$year[which(isoline_df$year>=1950 & isoline_df$year<1960)] <- 2
isoline_df$year[which(isoline_df$year>=1960 & isoline_df$year<1970)] <- 3
isoline_df$year[which(isoline_df$year>=1970 & isoline_df$year<1980)] <- 4
isoline_df$year[which(isoline_df$year>=1980 & isoline_df$year<1990)] <- 5
isoline_df$year[which(isoline_df$year>=1990 & isoline_df$year<2000)] <- 6
isoline_df$year[which(isoline_df$year>=2000)] <- 7
isoline_df[isoline_df==0] <- 1940
isoline_df[isoline_df==1] <- 1950
isoline_df[isoline_df==2] <- 1960
isoline_df[isoline_df==3] <- 1970
isoline_df[isoline_df==4] <- 1980
isoline_df[isoline_df==5] <- 1990
isoline_df[isoline_df==6] <- 2000
isoline_df[isoline_df==7] <- 2010
View(isoline_df)
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=isoline_df, mapping=aes(x=x, y=y, fill=as.factor(saga_colyear_v7)))+
scale_fill_manual(values=colorpal_alt2, breaks=seq(from=1940, to=2010, by=10), labels=seq(from=1940, to=2010, by=10), guide=guide_legend(reverse=TRUE))+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
#make map
colorpal2 <- viridis::mako(n=8, begin=0.3, end=0.9)
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=isoline_df, mapping=aes(x=x, y=y, fill=as.factor(saga_colyear_v7)))+
scale_fill_manual(values=colorpal, breaks=seq(from=1940, to=2010, by=10), labels=seq(from=1940, to=2010, by=10), guide=guide_legend(reverse=TRUE))+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=isoline_df, mapping=aes(x=x, y=y, fill=as.factor(saga_colyear_v7)))+
scale_fill_manual(values=colorpal2, breaks=seq(from=1940, to=2010, by=10), labels=seq(from=1940, to=2010, by=10), guide=guide_legend(reverse=TRUE))+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
ggplot(data = world) +
geom_sf(fill="gray80", colour="gray70") +
coord_sf(xlim = c(127, 155), ylim = c(-30, -10))+
ggnewscale::new_scale_fill()+
geom_tile(data=isoline_df, mapping=aes(x=x, y=y, fill=as.factor(year)))+
scale_fill_manual(values=colorpal2, breaks=seq(from=1940, to=2010, by=10), labels=seq(from=1940, to=2010, by=10), guide=guide_legend(reverse=TRUE))+
labs(fill="Colonization\nyear")+
ggnewscale::new_scale_fill()+
geom_point(data = localities, aes(x = long, y = lat), shape=21, colour="black", fill="white", size=3)+
theme_bw()+
theme(axis.title.x = element_text(size=18, margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size=18, margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=14))+
theme(legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(x="Longitude", y="Latitude")+
theme(legend.position=c(0.90, 0.65), legend.key.height=unit(1.25, "cm"))
